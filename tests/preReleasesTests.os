// BSLLS:UnusedLocalMethod-off
#Использовать asserts
#Использовать ".."

&ПараметризованныйТест(Имя = "Тест с параметрами {Параметры}")
&ИсточникЗначение("1.1.1", "1.1.1")
&ИсточникЗначение("1", "1.0.0")
&ИсточникЗначение("2.0", "2.0.0")
Процедура РелизнаяВерсияВСтроку(ВерсияСтрокой, Ожидание) Экспорт
	Версия = Новый Версия(ВерсияСтрокой);
	Ожидаем.Что(Версия.ВСтроку()).Равно(Ожидание);
КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("1.1.1-alpha", "1.1.1-alpha")
&ИсточникЗначение("1.1.1-alpha.1.2", "1.1.1-alpha.1.2")
&ИсточникЗначение("1.1.1-beta.1+abcdef.456", "1.1.1-beta.1+abcdef.456")
&ИсточникЗначение("1.1.0-beta-experimental.4.2+git-sha.deadbeef", "1.1.0-beta-experimental.4.2+git-sha.deadbeef")
Процедура ПреРелизнаяВерсияВСтроку(ВерсияСтрокой, Ожидание) Экспорт
	Версия = Новый Версия(ВерсияСтрокой);
	Ожидаем.Что(Версия.ВСтроку()).Равно(Ожидание);
КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение(".1.1", "Основная версия <.> должна содержать только цифры")
&ИсточникЗначение("1..1", "Второстепенная версия <.> должна содержать только цифры")
&ИсточникЗначение("1.2.-", "Версия патча <-> должна содержать только цифры")
&ИсточникЗначение("1.2.", "Неожиданный конец строки версии, нет данных после разделителя <.>")
&ИсточникЗначение("aa1.2.3", "Основная версия <aa1> должна содержать только цифры")
&ИсточникЗначение("1.1aa.1", "Второстепенная версия <1aa> должна содержать только цифры")
&ИсточникЗначение("1.2.1aa", "Версия патча <1aa> должна содержать только цифры")
&ИсточникЗначение("1.2.1.3", "Ожидается разделитель пререлизной версии <-> или метаданных сборки <+>, получен <.>")
&ИсточникЗначение("1.2.1-", "Ожидается компонент версии, но получен <EOF>")
&ИсточникЗначение("1.2.1+", "Ожидается компонент версии, но получен <EOF>")
&ИсточникЗначение("1.2.1-beta+", "Ожидается компонент версии, но получен <EOF>")
&ИсточникЗначение("1.2.1-beta..1", "Ожидается компонент версии, но получен <.>")
Процедура ПроверитьОшибкиРазбора(ВерсияСтрокой, Ожидание) Экспорт
	Версия = Новый Версия(ВерсияСтрокой);
	Ожидаем.Что(Версия.ОшибкаЧтенияВерсии).Равно(Ожидание);
КонецПроцедуры

&Тест
Процедура ПроверитьЧтоДефисыВходятВСоставФрагмента() Экспорт
	Версия = Новый Версия("1.1.0-beta-experimental.4.2+git-sha.deadbeef");

	Ожидаем.Что(Версия.ПреРелиз[0]).Равно("beta-experimental");
	Ожидаем.Что(Версия.ПреРелиз[1]).Равно(4);
	Ожидаем.Что(Версия.ПреРелиз[2]).Равно(2);
	Ожидаем.Что(Версия.МетаданныеСборки[0]).Равно("git-sha");
	Ожидаем.Что(Версия.МетаданныеСборки[1]).Равно("deadbeef");

КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("1.2.1", "1.2.2")
&ИсточникЗначение("1.2.2", "1.3.0")
&ИсточникЗначение("1.3.0", "2.0.0")
&ИсточникЗначение("2.0.0", "2.0.1")
&ИсточникЗначение("1.0.0-alpha", "1.0.0-alpha.1")
&ИсточникЗначение("1.0.0-alpha.1", "1.0.0-alpha.beta")
&ИсточникЗначение("1.0.0-alpha.beta", "1.0.0-beta")
&ИсточникЗначение("1.0.0-beta", "1.0.0-beta.2")
&ИсточникЗначение("1.0.0-beta.2", "1.0.0-beta.11")
&ИсточникЗначение("1.0.0-beta.11", "1.0.0-rc.1")
&ИсточникЗначение("1.0.0-rc.1", "1.0.0")
Процедура ПроверитьСтаршинствоВерсий(Знач Версия1, Знач Версия2) Экспорт
	
	// А < Б
	Ожидаем.Что(Версии.СравнитьВерсии(Версия1, Версия2)).Меньше(0);
	// Б > A
	Ожидаем.Что(Версии.СравнитьВерсии(Версия2, Версия1)).Больше(0);
	// Б = Б
	Ожидаем.Что(Версии.СравнитьВерсии(Версия2, Версия2)).Равно(0);
	// А = A
	Ожидаем.Что(Версии.СравнитьВерсии(Версия1, Версия1)).Равно(0);

КонецПроцедуры

&Тест
Процедура ПроверитьЧтоМетаданныеСборкиНеУчаствуютВСравнении()
	Версия1 = Новый Версия("1.0.1+git.12345");
	Версия2 = Новый Версия("1.0.1+sha.00000");
	Ожидаем.Что(Версии.СравнитьВерсии(Версия1, Версия2)).Равно(0);
КонецПроцедуры